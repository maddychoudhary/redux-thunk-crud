{"version":3,"sources":["api/washtraxClient.js","api/Managers/loginManager.js","api/Managers/PostListManager.js","api/Managers/index.js","api/index.js","actions/postAction.js","actions/types.js","containers/home/comp/PostCard.js","containers/home/comp/Posts.js","containers/home/index.js","components/Navbar.js","containers/home/comp/AddPost.js","containers/home/comp/Post.js","containers/home/comp/UpdatePost.js","reducers/postReducer.js","reducers/index.js","store/store.js","components/InputField.js","components/Button.js","components/AuthForm.js","actions/loginAction.js","containers/auth/index.js","App.js","index.js"],"names":["apiClient","SammyOpsClient","this","get","bind","post","patch","put","delete","axios","create","baseURL","interceptors","request","use","a","config","err","Promise","reject","token","headers","Authorization","JSON","stringify","url","_getClient","_config","data","progress","SOpClient","_delete","window","localStorage","getItem","login_data","posts_list","add_post","update_post","id","delete_post","LoginManager","PostListManager","Managers","WashtraxClient","getPostsLoading","type","payload","addPostLoading","updatePostLoading","deletePostLoading","PostCard","postItem","dispatch","useDispatch","className","src","alt","title","to","class","onClick","isLoading","API","then","response","deletePostSuccess","catch","error","deletePost","body","Posts","posts","useSelector","state","useEffect","getPosts","map","Home","Navbar","href","AddPost","history","useHistory","useState","setTitle","setBody","onSubmit","e","preventDefault","addPostSuccess","addPostError","addPost","push","placeholder","value","onChange","target","rows","Post","useParams","loadPost","UpdatePost","console","log","editPost","updatePostError","updatePost","initialState","postsReducer","action","find","filter","combineReducers","postReducer","store","createStore","rootReducer","composeWithDevTools","applyMiddleware","thunk","InputField","props","label","name","change","style","width","HTMLfor","Button","handleButton","idName","AuthForm","loading","email","pass","setEmail","setPass","signUpChange","loginSubmit","siginUpSubmit","changeForm","ErrorClass","facebookLogIn","color","height","loginLoading","Auth","setChangeForm","auth","document","querySelector","innerHTML","res","setItem","loginSuccess","loginError","login","password","App","exact","path","component","ReactDOM","render","StrictMode","getElementById"],"mappings":"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","file":"static/js/main.3273bc64.chunk.js","sourcesContent":["import axios from 'axios';\r\n\r\nlet apiClient = null;\r\n\r\nclass SammyOpsClient {\r\n  constructor() {\r\n    this.get = this.get.bind(this);\r\n    this.post = this.post.bind(this);\r\n    this.patch = this.patch.bind(this);\r\n    this.put = this.put.bind(this);\r\n    this.delete = this.delete.bind(this);\r\n  }\r\n  _getClient() {\r\n    apiClient = axios.create({\r\n      //baseURL: 'https://reqres.in/api/',\r\n      baseURL: 'https://jsonplaceholder.typicode.com/',\r\n    });\r\n\r\n    apiClient.interceptors.request.use(\r\n      async (config) => {\r\n\r\n        return config;\r\n      },\r\n      (err) => {\r\n        return Promise.reject(err);\r\n      }\r\n    );\r\n\r\n    return apiClient;\r\n  }\r\n\r\n  _config() {\r\n    return {};\r\n    //return { headers: { Authorization: access_token } };\r\n  }\r\n  _authConfig(token) {\r\n    return {\r\n      headers: {\r\n        Authorization: `Bearer ${JSON.stringify(token)}`,\r\n      },\r\n    };\r\n  }\r\n\r\n  get(url) {\r\n    return this._getClient().get(url, this._config());\r\n  }\r\n\r\n  post(url, data, progress) {\r\n    return this._getClient().post(url, data, progress, this._config());\r\n  }\r\n  patch(url, data) {\r\n    return this._getClient().patch(url, data, this._config());\r\n  }\r\n  put(url, data) {\r\n    return this._getClient().put(url, data, this._config());\r\n  }\r\n  delete(url, data) {\r\n    return this._getClient().delete(url, data, this._config());\r\n  }\r\n}\r\n\r\nconst SOpClient = new SammyOpsClient();\r\nconst get = SOpClient.get;\r\nconst post = SOpClient.post;\r\nconst patch = SOpClient.patch;\r\nconst put = SOpClient.put;\r\nconst _delete = SOpClient.delete;\r\nconst token =\r\n  typeof window !== 'undefined' ? localStorage.getItem('token') : '';\r\nconst clientId =\r\n  typeof window !== 'undefined' ? localStorage.getItem('userId') : '';\r\n\r\nexport default {\r\n  SammyOpsClient,\r\n};\r\nexport {\r\n  token,\r\n  // formData,\r\n  clientId,\r\n  get,\r\n  post,\r\n  patch,\r\n  put,\r\n  _delete\r\n};\r\n","import { post, get, formData, clientId } from '../washtraxClient';\r\n\r\nconst login_data = (data) => {\r\n  return post(`/login`, data);\r\n};\r\nexport default {\r\n  login_data,\r\n};","import { _delete,put,post, get, patch, formData, clientId } from '../washtraxClient';\r\n\r\nconst posts_list = () => {\r\n  return get('/posts');\r\n};\r\nconst add_post = (data) => {\r\n  return post('/posts', data);\r\n};\r\nconst update_post = (data) => {\r\n  return put(`/posts/${data.id}`, data);\r\n};\r\nconst delete_post = (id) => {\r\n  return _delete(`/posts/${id}`);\r\n};\r\n\r\nexport default {\r\n  posts_list,\r\n  add_post,\r\n  update_post,\r\n  delete_post,\r\n};\r\n","import LoginManager from './loginManager';\r\nimport PostListManager from \"./PostListManager\";\r\n\r\n\r\nexport default {\r\n  ...LoginManager,\r\n  ...PostListManager,\r\n};\r\n","import Managers from './Managers';\r\nimport WashtraxClient from './washtraxClient';\r\n\r\nexport default {\r\n  ...Managers,\r\n  ...WashtraxClient,\r\n};","import {\r\n  GET_POSTS_SUCCESS,\r\n  GET_POSTS_LOADING,\r\n  GET_POSTS_ERROR,\r\n\r\n  CREATE_POST_SUCCESS,\r\n  CREATE_POST_LOADING,\r\n  CREATE_POST_ERROR,\r\n\r\n  EDIT_POST,\r\n\r\n  UPDATE_POST_SUCCESS,\r\n  UPDATE_POST_LOADING,\r\n  UPDATE_POST_ERROR,\r\n\r\n  DELETE_POST_SUCCESS,\r\n  DELETE_POST_LOADING,\r\n  DELETE_POST_ERROR\r\n} from \"./types\";\r\nimport API from \"../api\";\r\n\r\n//fetch posts data...................................\r\nexport const getPostsSuccess = (data) => {\r\n  return {\r\n    type: GET_POSTS_SUCCESS,\r\n    payload: data,\r\n  }\r\n}\r\n\r\nexport const getPostsLoading = (data) => {\r\n  return {\r\n    type: GET_POSTS_LOADING,\r\n    payload: data,\r\n  }\r\n}\r\n\r\nexport const getPostsError = (data) => {\r\n  return {\r\n    type: GET_POSTS_ERROR,\r\n    payload: data,\r\n  }\r\n}\r\n\r\nexport const getPosts = () => {\r\n  let isLoading = true;\r\n  const { posts_list } = API;\r\n  return (dispatch) => {\r\n    dispatch(getPostsLoading(isLoading));\r\n    return posts_list()\r\n      .then(response => {\r\n        //console.log(response.data)\r\n        dispatch(getPostsSuccess(response.data));\r\n        isLoading = false;\r\n        dispatch(getPostsLoading(isLoading));\r\n      }).catch(error => {\r\n        dispatch(getPostsError(error));\r\n        isLoading = false;\r\n        dispatch(getPostsLoading(isLoading));\r\n      })\r\n  }\r\n}\r\n\r\n\r\n\r\n//create posts;\r\nexport const addPostSuccess = (data) => {\r\n  return {\r\n    type: CREATE_POST_SUCCESS,\r\n    payload: data,\r\n  }\r\n}\r\n\r\nexport const addPostLoading = (data) => {\r\n  return {\r\n    type: CREATE_POST_LOADING,\r\n    payload: data,\r\n  }\r\n}\r\n\r\nexport const addPostError = (data) => {\r\n  return {\r\n    type: CREATE_POST_ERROR,\r\n    payload: data,\r\n  }\r\n}\r\n\r\nexport const addPost = (data) => {\r\n  let isLoading = true;\r\n  const { add_post } = API;\r\n  return (dispatch) => {\r\n    dispatch(addPostLoading(isLoading));\r\n    return add_post(data)\r\n      .then(response => {\r\n        //console.log(response.data)\r\n        dispatch(addPostSuccess(response.data));\r\n        isLoading = false;\r\n        dispatch(addPostLoading(isLoading));\r\n      }).catch(error => {\r\n        dispatch(addPostError(error));\r\n        isLoading = false;\r\n        dispatch(addPostLoading(isLoading));\r\n      })\r\n  }\r\n}\r\n\r\n//edit post;\r\nexport const editPost = (id) => {\r\n  return {\r\n    type: EDIT_POST,\r\n    payload: id,\r\n  }\r\n};\r\n\r\n//update post;\r\nexport const updatePostSuccess = (id) => {\r\n  return {\r\n    type: UPDATE_POST_SUCCESS,\r\n    payload: id,\r\n  }\r\n}\r\n\r\nexport const updatePostLoading = (data) => {\r\n  return {\r\n    type: UPDATE_POST_LOADING,\r\n    payload: data,\r\n  }\r\n}\r\n\r\nexport const updatePostError = (data) => {\r\n  return {\r\n    type: UPDATE_POST_ERROR,\r\n    payload: data,\r\n  }\r\n}\r\n\r\nexport const updatePost = (data) => {\r\n  let isLoading = true;\r\n  const { update_post } = API;\r\n  return (dispatch) => {\r\n    dispatch(updatePostLoading(isLoading));\r\n    return update_post(data)\r\n      .then(response => {\r\n        //console.log(response.data)\r\n        dispatch(updatePostSuccess(response.data));\r\n        isLoading = false;\r\n        dispatch(updatePostLoading(isLoading));\r\n      }).catch(error => {\r\n        dispatch(updatePostError(error));\r\n        isLoading = false;\r\n        dispatch(updatePostLoading(isLoading));\r\n      })\r\n  }\r\n}\r\n\r\n\r\n//delete post;\r\nexport const deletePostSuccess = (id) => {\r\n  return {\r\n    type: DELETE_POST_SUCCESS,\r\n    payload: id,\r\n  }\r\n}\r\n\r\nexport const deletePostLoading = (data) => {\r\n  return {\r\n    type: DELETE_POST_LOADING,\r\n    payload: data,\r\n  }\r\n}\r\n\r\nexport const deletePostError = (data) => {\r\n  return {\r\n    type: DELETE_POST_ERROR,\r\n    payload: data,\r\n  }\r\n}\r\n\r\nexport const deletePost = (id) => {\r\n  let isLoading = true;\r\n  const { delete_post } = API;\r\n  return (dispatch) => {\r\n    dispatch(deletePostLoading(isLoading));\r\n    return delete_post(id)\r\n      .then(response => {\r\n        //console.log(response.data)\r\n        dispatch(deletePostSuccess(id));\r\n        isLoading = false;\r\n        dispatch(deletePostLoading(isLoading));\r\n      }).catch(error => {\r\n        dispatch(deletePostError(error));\r\n        isLoading = false;\r\n        dispatch(deletePostLoading(isLoading));\r\n      })\r\n  }\r\n}","export const LOGIN_SUCCESS = \"LOGIN_SUCCESS\";\r\nexport const LOGIN_LOADING = \"LOGIN_LOADING\";\r\nexport const LOGIN_ERROR = \"LOGIN_ERROR\";\r\n\r\n\r\nexport const GET_POSTS_SUCCESS = \"GET_POSTS_SUCCESS\";\r\nexport const GET_POSTS_LOADING = \"GET_POSTS_LOADING\";\r\nexport const GET_POSTS_ERROR = \"GET_POSTS_ERROR\";\r\n\r\nexport const CREATE_POST_SUCCESS = \"CREATE_POST_SUCCESS\";\r\nexport const CREATE_POST_LOADING = \"CREATE_POST_LOADING\";\r\nexport const CREATE_POST_ERROR = \"CREATE_POST_ERROR\";\r\n\r\nexport const EDIT_POST = \"EDIT_POST\";\r\n\r\nexport const UPDATE_POST_SUCCESS = \"UPDATE_POST_SUCCESS\";\r\nexport const UPDATE_POST_LOADING = \"UPDATE_POST_LOADING\";\r\nexport const UPDATE_POST_ERROR = \"UPDATE_POST_ERROR\";\r\n\r\n\r\nexport const DELETE_POST_SUCCESS = \"DELETE_POST_SUCCESS\";\r\nexport const DELETE_POST_LOADING = \"DELETE_POST_LOADING\";\r\nexport const DELETE_POST_ERROR = \"DELETE_POST_ERROR\";\r\n","import React from \"react\";\r\nimport { deletePost } from \"../../../actions/postAction\";\r\nimport { useDispatch } from \"react-redux\";\r\nimport { Link } from \"react-router-dom\";\r\nimport EllipsisText from \"react-ellipsis-text\";\r\nconst PostCard = ({ postItem }) => {\r\n  const dispatch = useDispatch();\r\n  return (\r\n    <div className=\"col-lg-3 col-md-6 mb-4\">\r\n      <div className=\"card custom-card\">\r\n        <img\r\n          src={`https://source.unsplash.com/collection/${postItem.id}/1600x900`}\r\n          alt={postItem.title}\r\n          className=\"card-img-top\"\r\n        />\r\n        <Link\r\n          to={`/updatePost/${postItem.id}`}\r\n          className=\"btn btn-danger btn-edit\"\r\n        >\r\n          <span class=\"material-icons\">edit</span>\r\n        </Link>\r\n        <button\r\n          className=\"btn btn-danger btn-delete\"\r\n          onClick={() => dispatch(deletePost(postItem.id))}\r\n        >\r\n          <span class=\"material-icons\">delete_outline</span>\r\n        </button>\r\n        <div className=\"card-body\">\r\n          <h6 className=\"text-secondary\">{postItem.title}</h6>\r\n          <p>{postItem.body}</p>\r\n        </div>\r\n        <div className=\"card-footer\">\r\n          <Link to={`/post/${postItem.id}`} className=\"btn btn-primary\">\r\n            <span className=\"mb-1\"> read more</span>\r\n            <span class=\"material-icons\">keyboard_arrow_right</span>\r\n          </Link>\r\n        </div>\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default PostCard;\r\n","import React, { useEffect } from \"react\";\r\nimport PostCard from \"./PostCard\";\r\nimport { useSelector, useDispatch } from \"react-redux\";\r\nimport { getPosts } from \"../../../actions/postAction\"\r\n\r\nconst Posts = () => {\r\n  const dispatch = useDispatch();\r\n  const posts = useSelector((state) => state.post.posts);\r\n  const isLoading = useSelector((state) => state.post.isLoading);\r\n  const error = useSelector((state) => state.post.error);\r\n  useEffect(() => {\r\n    dispatch(getPosts());\r\n  }, [])\r\n  return (\r\n    <>\r\n      {(() => {\r\n        if (isLoading) {\r\n          return <h1>loading..............</h1>\r\n        } else if (error) {\r\n          return <h1>error...........</h1>\r\n        } else {\r\n          return <div className=\"row\">\r\n            {posts.map((postItem) => (\r\n              <PostCard postItem={postItem} />\r\n            ))}\r\n          </div>\r\n        }\r\n      })()}\r\n    </>\r\n  );\r\n};\r\n\r\nexport default Posts;\r\n","import React from 'react'\r\nimport Posts from './comp/Posts'\r\n\r\nconst Home = () => {\r\n    return (\r\n        <div className=\"container\">\r\n            <div className=\"py-4\">\r\n                <Posts />\r\n            </div>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default Home;\r\n","import React from \"react\";\r\nimport { Link } from \"react-router-dom\";\r\n\r\nconst Navbar = () => {\r\n  return (\r\n    <nav class=\"navbar navbar-expand-lg navbar-dark bg-primary\">\r\n      <div className=\"container\">\r\n        <Link class=\"navbar-brand\" to=\"/home\">\r\n          Redux Posts\r\n        </Link>\r\n\r\n        <div class=\"collapse navbar-collapse\" id=\"navbarSupportedContent\">\r\n          <ul class=\"navbar-nav mr-auto\">\r\n            <li class=\"nav-item active\">\r\n              <a class=\"nav-link\" href=\"!#\">\r\n                Home\r\n              </a>\r\n            </li>\r\n            <li class=\"nav-item\">\r\n              <a class=\"nav-link\" href=\"!#\">\r\n                Posts\r\n              </a>\r\n            </li>\r\n            <li class=\"nav-item\">\r\n              <a class=\"nav-link\" href=\"!#\">\r\n                Contact\r\n              </a>\r\n            </li>\r\n          </ul>\r\n          <Link to=\"/addPost\" className=\"btn btn-dark\">\r\n            Add Posts\r\n          </Link>\r\n        </div>\r\n      </div>\r\n    </nav>\r\n  );\r\n};\r\n\r\nexport default Navbar;\r\n","import React, { useState } from \"react\";\r\nimport shortid from \"shortid\";\r\nimport { addPost } from \"../../../actions/postAction\";\r\nimport { useDispatch } from \"react-redux\";\r\nimport { useHistory } from \"react-router-dom\";\r\n\r\nconst AddPost = () => {\r\n  let history = useHistory();\r\n  const dispatch = useDispatch();\r\n  const [title, setTitle] = useState(\"\");\r\n  const [body, setBody] = useState(\"\");\r\n\r\n  const submitForm = (e) => {\r\n    e.preventDefault();\r\n    const new_post = {\r\n      title: title,\r\n      body: body,\r\n    };\r\n\r\n    dispatch(addPost(new_post));\r\n    history.push(\"/home\");\r\n  };\r\n  return (\r\n    <div className=\"container\">\r\n      <div className=\"py-4\">\r\n        <div className=\"card shadow\">\r\n          <div className=\"card-header\">Add A Post</div>\r\n          <div className=\"card-body\">\r\n            <form onSubmit={submitForm}>\r\n              <div className=\"form-group\">\r\n                <input\r\n                  type=\"text\"\r\n                  className=\"form-control form-control-lg\"\r\n                  placeholder=\"Enter Post Title\"\r\n                  value={title}\r\n                  onChange={(e) => setTitle(e.target.value)}\r\n                />\r\n              </div>\r\n              <div className=\"form-group\">\r\n                <textarea\r\n                  rows=\"5\"\r\n                  className=\"form-control form-control-lg\"\r\n                  placeholder=\"Enter Post Body Text\"\r\n                  value={body}\r\n                  onChange={(e) => setBody(e.target.value)}\r\n                ></textarea>\r\n              </div>\r\n              {(() => {\r\n                if (title,body) {\r\n                  return <button className=\"btn btn-primary btn-lg\">Add New Post</button>\r\n                } else {\r\n                  return \"\"\r\n                }\r\n              })()}\r\n\r\n            </form>\r\n          </div>\r\n        </div>\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default AddPost;\r\n","import React, { useEffect } from \"react\";\r\nimport { useDispatch, useSelector } from \"react-redux\";\r\n//import { getPost } from \"../../../actions/postAction\";\r\nimport { useParams } from \"react-router-dom\";\r\n\r\nconst Post = () => {\r\n  const dispatch = useDispatch();\r\n  const post = useSelector((state) => state.post.post);\r\n  const { id } = useParams();\r\n  useEffect(() => {\r\n    loadPost();\r\n  }, []);\r\n\r\n  const loadPost = () => {\r\n    dispatch();\r\n  };\r\n\r\n  if (!post) {\r\n    return <h1>loading..</h1>;\r\n  }\r\n  return (\r\n    <div>\r\n      <img\r\n        src={`https://source.unsplash.com/collection/${post.id}/1920x700`}\r\n        alt={post.title}\r\n        className=\"img-fluid\"\r\n      />\r\n      <div className=\"container\">\r\n        <div className=\"py-5\">\r\n          <h1 className=\"display-4 mb-3\">{post.title}</h1>\r\n          <p className=\"lead\">{post.body}</p>\r\n          <p className=\"lead\">\r\n            Lorem ipsum dolor sit amet consectetur adipisicing elit. Optio\r\n            similique dicta, facere iusto non voluptatem assumenda. Adipisci\r\n            molestias modi assumenda numquam animi quo odio quis, ad eligendi\r\n            optio cumque atque earum et, velit doloribus fugit? Quam soluta\r\n            earum architecto, cupiditate adipisci tempora doloribus! Asperiores\r\n            quaerat ipsam libero optio distinctio excepturi.\r\n          </p>\r\n          <p className=\"lead\">\r\n            Lorem ipsum dolor sit amet consectetur adipisicing elit. Optio\r\n            similique dicta, facere iusto non voluptatem assumenda. Adipisci\r\n            molestias modi assumenda numquam animi quo odio quis, ad eligendi\r\n            optio cumque atque earum et, velit doloribus fugit? Quam soluta\r\n            earum architecto, cupiditate adipisci tempora doloribus! Asperiores\r\n            quaerat ipsam libero optio distinctio excepturi.\r\n          </p>\r\n          <p className=\"lead\">\r\n            Lorem ipsum dolor sit amet consectetur adipisicing elit. Sequi\r\n            doloremque ab et perferendis, earum dolores quos iure provident\r\n            labore id eum recusandae harum dolor iste consequuntur veniam,\r\n            adipisci deleniti molestias voluptates quasi porro! Illo reiciendis\r\n            est adipisci consequatur perspiciatis sapiente fugit esse eum, rem\r\n            nostrum dolor officiis repellendus dolores aliquid quaerat aut\r\n            dolore, explicabo labore similique deleniti? Adipisci ipsa error\r\n            excepturi, quibusdam, unde repellat ratione iusto labore deleniti\r\n            cumque animi! Eveniet ex voluptatum repudiandae vel rerum\r\n            reprehenderit accusamus velit nam iusto, cum ut amet dignissimos\r\n            corrupti quod consectetur unde temporibus saepe tenetur totam. Nulla\r\n            ipsam aut temporibus! Officia, vero perferendis.\r\n          </p>\r\n        </div>\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Post;\r\n","import React, { useState, useEffect } from \"react\";\r\nimport { useDispatch, useSelector } from \"react-redux\";\r\nimport { editPost, updatePost } from \"../../../actions/postAction\";\r\nimport { useParams, useHistory } from \"react-router-dom\";\r\n\r\nconst UpdatePost = () => {\r\n  let history = useHistory();\r\n  const dispatch = useDispatch();\r\n  const post = useSelector((state) => state.post.post);\r\n  console.log(post)\r\n  const { id } = useParams();\r\n  const [title, setTitle] = useState(\"\");\r\n  const [body, setBody] = useState(\"\");\r\n\r\n  useEffect(() => {\r\n    loadPost();\r\n  }, []);\r\n  useEffect(() => {\r\n    if (post) {\r\n      setTitle(post.title);\r\n      setBody(post.body);\r\n    }\r\n  }, [post]);\r\n  const loadPost = () => {\r\n    dispatch(editPost(id));\r\n  };\r\n  const submitForm = (e) => {\r\n    e.preventDefault();\r\n    const update_post = {\r\n      id: post.id,\r\n      title: title,\r\n      body: body,\r\n    };\r\n\r\n    dispatch(updatePost(update_post));\r\n    history.push(\"/home\");\r\n  };\r\n  return (\r\n    <div className=\"container\">\r\n      <div className=\"py-4\">\r\n        <div className=\"card shadow\">\r\n          <div className=\"card-header\">Update A Post</div>\r\n          <div className=\"card-body\">\r\n            <form onSubmit={submitForm}>\r\n              <div className=\"form-group\">\r\n                <input\r\n                  type=\"text\"\r\n                  className=\"form-control form-control-lg\"\r\n                  placeholder=\"Enter Post Title\"\r\n                  value={title}\r\n                  onChange={(e) => setTitle(e.target.value)}\r\n                />\r\n              </div>\r\n              <div className=\"form-group\">\r\n                <textarea\r\n                  rows=\"5\"\r\n                  className=\"form-control form-control-lg\"\r\n                  placeholder=\"Enter Post Body Text\"\r\n                  value={body}\r\n                  onChange={(e) => setBody(e.target.value)}\r\n                ></textarea>\r\n              </div>\r\n              <button className=\"btn btn-primary btn-lg\">Update Post</button>\r\n            </form>\r\n          </div>\r\n        </div>\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default UpdatePost;\r\n","import {\r\n  GET_POSTS_SUCCESS,\r\n  GET_POSTS_LOADING,\r\n  GET_POSTS_ERROR,\r\n\r\n  CREATE_POST_SUCCESS,\r\n  CREATE_POST_LOADING,\r\n  CREATE_POST_ERROR,\r\n\r\n  EDIT_POST,\r\n\r\n  UPDATE_POST_SUCCESS,\r\n  UPDATE_POST_LOADING,\r\n  UPDATE_POST_ERROR,\r\n\r\n  DELETE_POST_SUCCESS,\r\n  DELETE_POST_LOADING,\r\n  DELETE_POST_ERROR\r\n\r\n} from \"../actions/types\"; \r\n\r\nconst initialState = {\r\n  posts: [],\r\n  error: null,\r\n  isLoading: false,\r\n  post:null,\r\n};\r\nconst postsReducer = (state = initialState, action) => {\r\n  switch (action.type) {\r\n    case GET_POSTS_SUCCESS:\r\n      return {\r\n        ...state,\r\n        posts: action.payload,\r\n      };\r\n    case GET_POSTS_LOADING:\r\n      return {\r\n        ...state,\r\n        isLoading: action.payload,\r\n      };\r\n    case GET_POSTS_ERROR:\r\n      return {\r\n        ...state,\r\n        error: action.payload,\r\n      };\r\n    \r\n    case CREATE_POST_SUCCESS:\r\n      return {\r\n        ...state,\r\n        posts: [action.payload, ...state.posts],\r\n      }\r\n      case CREATE_POST_LOADING:\r\n        return {\r\n          ...state,\r\n        isLoading: action.payload,\r\n      }\r\n      case CREATE_POST_ERROR:\r\n        return {\r\n          ...state,\r\n        error: action.payload,\r\n      }\r\n    \r\n      case EDIT_POST:\r\n        return {\r\n          ...state,\r\n          post: state.posts.find((postItem) => postItem.id == action.payload),\r\n      };\r\n    \r\n      case UPDATE_POST_SUCCESS:\r\n        return {\r\n          ...state,\r\n          posts: state.posts.map((postItem) =>\r\n            postItem.id == action.payload.id ? action.payload : postItem\r\n          ),\r\n      };\r\n      case UPDATE_POST_LOADING:\r\n        return {\r\n          ...state,\r\n        isLoading: action.payload,\r\n      }\r\n      case UPDATE_POST_ERROR:\r\n        return {\r\n          ...state,\r\n        error: action.payload,\r\n      }\r\n    \r\n      case DELETE_POST_SUCCESS:\r\n        return {\r\n          ...state,\r\n          posts: state.posts.filter((postItem) => postItem.id != action.payload),\r\n      };\r\n      case DELETE_POST_LOADING:\r\n        return {\r\n          ...state,\r\n        isLoading: action.payload,\r\n      }\r\n      case DELETE_POST_ERROR:\r\n        return {\r\n          ...state,\r\n        error: action.payload,\r\n      }\r\n    default:\r\n      return state;\r\n  }\r\n};\r\nexport default postsReducer;","import PostReducer from \"./postReducer\";\r\nimport { combineReducers } from \"redux\";\r\nimport postReducer from \"./postReducer\";\r\n\r\nexport default combineReducers({\r\n  post: postReducer,\r\n});\r\n","import { createStore, applyMiddleware } from \"redux\";\r\nimport { composeWithDevTools } from \"redux-devtools-extension\";\r\nimport rootReducer from \"../reducers/index\";\r\nimport thunk from \"redux-thunk\"\r\n\r\nconst store = createStore(rootReducer, composeWithDevTools(applyMiddleware(thunk)));\r\n\r\nexport default store;\r\n","import React from 'react'\r\nimport \"../styles/auth.css\"\r\n\r\nconst InputField = (props) => {\r\n    const { label, type, name, placeholder, value, change } = props\r\n    return (\r\n        <div className=\"mb-3\" style={{ width: \"100%\" }}>\r\n            <label HTMLfor={label} className=\"form-label\">{label}</label>\r\n            <input type={type} className=\"form-control\" placeholder={placeholder} name={name} value={value} onChange={change} />\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default InputField;\r\n","import React from 'react'\r\n\r\nconst Button = (props) => {\r\n    const { id, className, name, handleButton, idName } = props\r\n    return (\r\n        <div id={id}>\r\n            <button onClick={handleButton} type=\"button\" id={idName} className={className}>{name}</button>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default Button;\r\n","import React from 'react'\r\nimport InputField from './InputField';\r\nimport Loader from \"react-loader-spinner\";\r\nimport \"react-loader-spinner/dist/loader/css/react-spinner-loader.css\";\r\nimport Button from \"./Button\"\r\n\r\nconst AuthForm = (props) => {\r\n    const { loading, email, pass, setEmail, setPass, signUpChange, loginSubmit, siginUpSubmit, changeForm, ErrorClass, facebookLogIn } = props\r\n    return (\r\n        <>\r\n            {\r\n                loading ? (\r\n                    <div className=\"loader_react\">\r\n                        <Loader\r\n                            type=\"ThreeDots\"\r\n                            color=\"#00BFFF\"\r\n                            height={100}\r\n                            width={100}\r\n                            color=\"rgb(136, 105, 46)\"\r\n                        />\r\n                    </div>\r\n                ) : (<>\r\n                    <form className=\"auth_form\">\r\n                        <InputField label=\"Email\" type=\"email\" name=\"email\" placeholder=\"Enter your email\" value={email} change={setEmail} />\r\n                        <InputField label=\"Password\" type=\"password\" name=\"password\" placeholder=\"Enter your password\" value={pass} change={setPass} />\r\n                        <div id=\"loginButton\">\r\n                            <Button handleButton={changeForm ? loginSubmit : siginUpSubmit} className=\"btn btn-secondary\" name={changeForm ? \"Sign in\" : \"Sign up\"} />\r\n                            <div id=\"sign_up_btn\" onClick={signUpChange}>{changeForm ? \"sign up\" : \"\"}</div>\r\n                        </div>\r\n                    </form>\r\n                    <div id=\"gol_fb\">\r\n                        <span className={ErrorClass} style={{ color: \"red\" }}></span>\r\n                        <Button idName=\"google_btn\" className=\"btn btn-primary\" name={changeForm ? \"Sign in with Google +\" : \"Sign up with Google +\"} />\r\n                        <Button handleButton={facebookLogIn} idName=\"facebook_btn\" className=\"btn btn-success\" name=\"Sign up with Facebook\" />\r\n                    </div>\r\n                </>\r\n                    )\r\n            }\r\n\r\n\r\n\r\n\r\n        </>\r\n    )\r\n}\r\n\r\nexport default AuthForm\r\n","import {\r\n    LOGIN_SUCCESS,\r\n    LOGIN_LOADING,\r\n    LOGIN_ERROR,\r\n  } from \"./types\";\r\n\r\n  import API from \"../api\";\r\n  \r\n  //login data...................................\r\n  export const loginSuccess = (data) => {\r\n    return {\r\n      type: LOGIN_SUCCESS,\r\n      payload: data,\r\n    }\r\n  }\r\n  \r\n  export const loginLoading = (data) => {\r\n    return {\r\n      type: LOGIN_LOADING,\r\n      payload: data,\r\n    }\r\n  }\r\n  \r\n  export const loginError = (data) => {\r\n    return {\r\n      type: LOGIN_ERROR,\r\n      payload: data,\r\n    }\r\n  }\r\n  \r\n  export const login = (data) => {\r\n    let isLoading = true;\r\n    const { login_data } = API;\r\n    return (dispatch) => {\r\n      dispatch(loginLoading(isLoading));\r\n       login_data(data)\r\n           .then(res => {\r\n            console.log(res)\r\n        if (res.data) {\r\n            const data = res.data;\r\n            localStorage.setItem('token', data.token);\r\n          dispatch(loginSuccess());\r\n          isLoading = false;\r\n            dispatch(loginLoading(isLoading));\r\n            \r\n            }\r\n        }).catch(error => {\r\n          dispatch(loginError(error));\r\n          isLoading = false;\r\n          dispatch(loginLoading(isLoading));\r\n        })\r\n    }\r\n  }\r\n  \r\n  \r\n  \r\n  ","import React, { useState, useEffect } from 'react'\r\nimport AuthForm from '../../components/AuthForm'\r\nimport { Redirect, useHistory } from \"react-router-dom\";\r\nimport { login } from \"../../actions/loginAction\";\r\nimport { useDispatch } from \"react-redux\";\r\n\r\nconst Auth = () => {\r\n    const history = useHistory();\r\n    const dispatch = useDispatch();\r\n\r\n    const [email, setEmail] = useState(\"\")\r\n    const [pass, setPass] = useState(\"\")\r\n    const [loading, setLoading] = useState(false);\r\n    const [changeForm, setChangeForm] = useState(true);\r\n    let auth = localStorage.getItem(\"uid\");\r\n    const change_Form = () => {\r\n        setChangeForm(false)\r\n    }\r\n    const siginUpSubmit = () => {\r\n\r\n    }\r\n    const loginSubmit = (e) => {\r\n        const data = {\r\n            email: email,\r\n            password: pass,\r\n        }\r\n        dispatch(login(data));\r\n        history.push(\"/home\")\r\n\r\n    }\r\n    const facebookLogIn = () => {\r\n\r\n    }\r\n    return (\r\n        <>\r\n            {auth ? (<Redirect to=\"/customer\"></Redirect>) : (null)}\r\n            <div className=\"login\">\r\n                <h3 className=\"welcome\">welcome</h3>\r\n                {changeForm ?\r\n                    <AuthForm changeForm={changeForm} email={email} setEmail={(e) => { setEmail(e.target.value); document.querySelector(\".ErrorClass\").innerHTML = \"\" }} pass={pass} setPass={(e) => { setPass(e.target.value) }} loading={loading} loginSubmit={loginSubmit} signUpChange={change_Form} ErrorClass=\"ErrorClass\" facebookLogIn={facebookLogIn} />\r\n                    :\r\n                    <AuthForm changeForm={changeForm} email={email} setEmail={(e) => { setEmail(e.target.value) }} pass={pass} setPass={(e) => { setPass(e.target.value) }} loading={loading} siginUpSubmit={siginUpSubmit} />\r\n                }\r\n\r\n\r\n            </div>\r\n        </>\r\n    )\r\n}\r\n\r\nexport default Auth\r\n","import React from \"react\";\r\nimport \"./styles/App.scss\";\r\nimport Home from \"./containers/home/index\";\r\nimport Navbar from \"./components/Navbar\";\r\nimport { BrowserRouter as Router, Route, Switch } from \"react-router-dom\";\r\nimport AddPost from \"./containers/home/comp/AddPost\";\r\nimport Post from \"./containers/home/comp/Post\";\r\nimport UpdatePost from \"./containers/home/comp/UpdatePost\";\r\nimport { Provider } from \"react-redux\";\r\nimport store from \"./store/store\";\r\nimport Auth from \"./containers/auth/index\"\r\n\r\nfunction App() {\r\n  return (\r\n    <Provider store={store}>\r\n      <Router>\r\n        <div className=\"App\">\r\n          <Navbar />\r\n          <Switch>\r\n            <Route exact path=\"/\" component={Auth} />\r\n            <Route exact path=\"/home\" component={Home} />\r\n            <Route exact path=\"/addPost\" component={AddPost} />\r\n            <Route exact path=\"/post/:id\" component={Post} />\r\n            <Route exact path=\"/updatePost/:id\" component={UpdatePost} />\r\n          </Switch>\r\n        </div>\r\n      </Router>\r\n    </Provider>\r\n  );\r\n}\r\n\r\nexport default App;\r\n","import React from \"react\";\r\nimport ReactDOM from \"react-dom\";\r\nimport \"./styles/index.scss\";\r\nimport App from \"./App\";\r\n\r\nReactDOM.render(\r\n  <React.StrictMode>\r\n    <App />\r\n  </React.StrictMode>,\r\n  document.getElementById(\"root\")\r\n);\r\n"],"sourceRoot":""}